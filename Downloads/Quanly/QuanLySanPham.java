
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 84978
 */
public class QuanLySanPham extends javax.swing.JFrame {
    private static String MaCH = "";
    private TableRowSorter<TableModel> rowSorter;
    private TableRowSorter<TableModel> rowSorter2;
    private TableRowSorter<TableModel> rowSorter3;
    private TableRowSorter<TableModel> rowSorter4;
    /**
     * Creates new form QuanLySanPham
     */
    public QuanLySanPham(String MaCuaHang) {
        initComponents();
        //MaCH = MaCuaHang; // Trong trường hợp Login
        MaCH = "CH85650"; // Xoá dòng này trong trường hợp login
        this.LoadSuppliesTable();
        this.LoadImportOrderTable();
        this.LoadDeliveryOrderTable();
        this.LoadInventoryTable();
        fillInventoryIDandInventoryAddress();
        rowSorter= new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(rowSorter);
        rowSorter2= new TableRowSorter<>(jTable2.getModel());
        jTable2.setRowSorter(rowSorter2);
        rowSorter3= new TableRowSorter<>(jTable3.getModel());
        jTable3.setRowSorter(rowSorter3);
        rowSorter4= new TableRowSorter<>(jTable6.getModel());
        jTable6.setRowSorter(rowSorter4);
        
        
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        MaSPTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TenSPTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MoTaTxt = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        GiaGocTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        PhanTramGiamGiaTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        AddBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        MaDMCBox = new javax.swing.JComboBox<>();
        MaNCCCBox = new javax.swing.JComboBox<>();
        LuuVetBtn = new javax.swing.JButton();
        jtfFilter = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtfFilter1 = new javax.swing.JTextField();
        jtfFilter2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        MaKhoTxt = new javax.swing.JLabel();
        DiaChiKhoTxt = new javax.swing.JLabel();
        jtfFilter3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(31, 34, 46));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(31, 34, 46));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Mô tả", "Giá gốc", "Phần trăm giảm giá", "Mã danh mục", "Mã nhà cung cấp"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã sản phẩm");

        MaSPTxt.setEditable(false);
        MaSPTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tên sản phẩm");

        TenSPTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mô tả");

        MoTaTxt.setColumns(20);
        MoTaTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        MoTaTxt.setRows(5);
        jScrollPane2.setViewportView(MoTaTxt);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Giá gốc");

        GiaGocTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        GiaGocTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GiaGocTxtKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Phần trăm giảm giá");

        PhanTramGiamGiaTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PhanTramGiamGiaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PhanTramGiamGiaTxtKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mã danh mục");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Mã nhà cung cấp");

        AddBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddBtn.setText("Thêm mới sản phẩm");
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });

        UpdateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UpdateBtn.setText("Chỉnh sửa sản phẩm");
        UpdateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateBtnMouseClicked(evt);
            }
        });

        DeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteBtn.setText("Xoá sản phẩm");
        DeleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteBtnMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Thêm");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Thêm");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        MaDMCBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        MaNCCCBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        LuuVetBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LuuVetBtn.setText("Lưu vết giá sản phẩm");
        LuuVetBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LuuVetBtnMouseClicked(evt);
            }
        });

        jtfFilter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfFilter.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jtfFilter.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jtfFilter.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TenSPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaSPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(154, 154, 154)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GiaGocTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                            .addComponent(PhanTramGiamGiaTxt)
                            .addComponent(MaDMCBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MaNCCCBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AddBtn)
                        .addGap(66, 66, 66)
                        .addComponent(UpdateBtn)
                        .addGap(48, 48, 48)
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(LuuVetBtn)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jtfFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(MaSPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(GiaGocTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TenSPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(PhanTramGiamGiaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jButton1)
                                .addComponent(MaDMCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jButton4)
                                .addComponent(MaNCCCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBtn)
                    .addComponent(UpdateBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(LuuVetBtn))
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Danh Sách Sản Phẩm", jPanel2);

        jPanel3.setBackground(new java.awt.Color(31, 34, 46));

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã đơn nhập", "Số thứ tự", "Mã sản phẩm", "Số lượng nhập"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã đơn xuất", "Số thứ tự", "Mã sản phẩm", "Số lượng xuất"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jTable4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã đơn nhập", "Số thứ tự", "Mã sản phẩm", "Số lượng nhập"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        jTable5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã đơn xuất", "Số thứ tự", "Mã sản phẩm", "Số lượng xuất"
            }
        ));
        jScrollPane6.setViewportView(jTable5);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Đơn Nhập");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Chi tiết đơn nhập");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Đơn Xuất");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Chi tiết đơn xuất");

        jtfFilter1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfFilter1.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jtfFilter1.getText();

                if (text.trim().length() == 0) {
                    rowSorter2.setRowFilter(null);
                } else {
                    rowSorter2.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jtfFilter1.getText();

                if (text.trim().length() == 0) {
                    rowSorter2.setRowFilter(null);
                } else {
                    rowSorter2.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });

        jtfFilter2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfFilter2.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jtfFilter2.getText();

                if (text.trim().length() == 0) {
                    rowSorter3.setRowFilter(null);
                } else {
                    rowSorter3.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jtfFilter2.getText();

                if (text.trim().length() == 0) {
                    rowSorter3.setRowFilter(null);
                } else {
                    rowSorter3.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfFilter1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 35, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(327, 327, 327))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfFilter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jtfFilter2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        jTabbedPane1.addTab("Lịch Sử Nhập- Xuất Hàng", jPanel3);

        jPanel1.setBackground(new java.awt.Color(31, 34, 46));

        jTable6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng tồn kho"
            }
        ));
        jScrollPane7.setViewportView(jTable6);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Mã Kho: ");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Địa Chỉ Kho: ");

        MaKhoTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        MaKhoTxt.setForeground(new java.awt.Color(255, 255, 255));

        DiaChiKhoTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DiaChiKhoTxt.setForeground(new java.awt.Color(255, 255, 255));

        jtfFilter3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfFilter3.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = jtfFilter3.getText();

                if (text.trim().length() == 0) {
                    rowSorter4.setRowFilter(null);
                } else {
                    rowSorter4.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jtfFilter3.getText();

                if (text.trim().length() == 0) {
                    rowSorter4.setRowFilter(null);
                } else {
                    rowSorter4.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
        jtfFilter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFilter3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1195, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(MaKhoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 910, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addComponent(DiaChiKhoTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jtfFilter3, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MaKhoTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(DiaChiKhoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jtfFilter3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Theo Dõi Tồn Kho", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        ThemMoiNhaCungCap tmncc = new ThemMoiNhaCungCap();
        JPanel jp = new JPanel();
        jp.setPreferredSize(new java.awt.Dimension(500, 40));
        jp.setBackground(new java.awt.Color(31,34,46));
        JButton OKBtn = new JButton("OK");
        OKBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        OKBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        JButton CacelBtn = new JButton("Huỷ");
        CacelBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        CacelBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        jp.add(OKBtn);
        jp.add(CacelBtn);
        JDialog dialog = new JDialog();
        OKBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String MaNCC = tmncc.getMaNCC();
                String TenNCC = tmncc.getTenNCC();
                if(TenNCC.equals("")){
                    JOptionPane.showMessageDialog(dialog, "Nhập tên nhà cung cấp");
                }
                else{
                    if(!(new DBUpdater().ThemMoiNhaCungCap(MaNCC, TenNCC))){
                        JOptionPane.showMessageDialog(dialog, "Lỗi");
                        dialog.dispose();
                    }
                    else{
                        LoadMaNCCCBox();
                        MaNCCCBox.setSelectedItem((MaNCC));
                        JOptionPane.showMessageDialog(dialog, "Thêm thành công");
                        dialog.dispose();
                    }

                }

            }
        });
        CacelBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dialog.dispose();
            }
        });
        dialog.getContentPane().setLayout(new BorderLayout());
        dialog.getContentPane( ).add(tmncc, BorderLayout.CENTER);
        dialog.getContentPane( ).add(jp, BorderLayout.SOUTH);
        dialog.setModal(true);
        dialog.pack();
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialog.setLocationRelativeTo(null);

        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter()
            {
                public void windowClosing (WindowEvent e)
                {
                    super.windowClosing(e);
                }
            });
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        ThemMoiDanhMuc tmdm = new ThemMoiDanhMuc();
        JPanel jp = new JPanel();
        jp.setPreferredSize(new java.awt.Dimension(500, 40));
        jp.setBackground(new java.awt.Color(31,34,46));
        JButton OKBtn = new JButton("OK");
        OKBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        OKBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        JButton CacelBtn = new JButton("Huỷ");
        CacelBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        CacelBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        jp.add(OKBtn);
        jp.add(CacelBtn);
        JDialog dialog = new JDialog();
        OKBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String MaDM = tmdm.LayMaDM();
                String TenDM = tmdm.LayTenDM();
                if(TenDM.equals("")){
                    JOptionPane.showMessageDialog(dialog, "Nhập tên danh mục");
                }
                else{
                    if(!(new DBUpdater().ThemMoiDanhMuc(MaDM, TenDM))){
                        JOptionPane.showMessageDialog(dialog, "Lỗi");
                        dialog.dispose();
                    }
                    else{
                        LoadMaDMCBox();
                        MaDMCBox.setSelectedItem((MaDM));
                        JOptionPane.showMessageDialog(dialog, "Thêm thành công");
                        dialog.dispose();
                    }
                }

            }

        });
        CacelBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dialog.dispose();
            }
        });
        dialog.getContentPane().setLayout(new BorderLayout());
        dialog.getContentPane( ).add(tmdm, BorderLayout.CENTER);
        dialog.getContentPane( ).add(jp, BorderLayout.SOUTH);
        dialog.setModal(true);
        dialog.pack();
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialog.setLocationRelativeTo(null);

        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter()
            {
                public void windowClosing (WindowEvent e)
                {
                    super.windowClosing(e);
                }
            });
    }//GEN-LAST:event_jButton1MouseClicked

    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked
        ThemMoiSanPham tmsp = new ThemMoiSanPham();
        JPanel jp = new JPanel();
        jp.setPreferredSize(new java.awt.Dimension(500, 40));
        jp.setBackground(new java.awt.Color(31,34,46));
        JButton OKBtn = new JButton("OK");
        OKBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        OKBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        JButton CacelBtn = new JButton("Huỷ");
        CacelBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        CacelBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        jp.add(OKBtn);
        jp.add(CacelBtn);
        JDialog dialog = new JDialog();
        OKBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Boolean flag = true;
                String MaSP = tmsp.getMaSP();
                String TenSP = tmsp.getTenSP();
                if(TenSP.equals("")){
                    JOptionPane.showMessageDialog(dialog, "Nhập tên sản phẩm");
                    flag = false;
                }
                String Mota = tmsp.getMoTa();
                if(Mota.equals("")){
                    JOptionPane.showMessageDialog(dialog, "Nhập mô tả");
                    flag = false;
                }
                String GiaGoc = tmsp.getGiaGoc();
                int giagoc= 0;
                if(GiaGoc.equals("")||GiaGoc.equals("0")){
                    JOptionPane.showMessageDialog(dialog, "Nhập giá gốc");
                    flag = false;
                }
                else{
                    giagoc = Integer.parseInt(GiaGoc);
                }
                String PhanTram = tmsp.getPhanTram();
                int phantram = 0;
                if(PhanTram.equals("")){
                    JOptionPane.showMessageDialog(dialog, "Nhập phầm trăm giảm giá");
                    flag = false;
                }
                else{
                    phantram = Integer.parseInt(PhanTram);
                }
                if(flag == true){
                    String MaDM = tmsp.getMaDM();
                    String MaNCC = tmsp.getMaNCC();
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");  
                    LocalDateTime now = LocalDateTime.now();
                    String NgayApDung = dtf.format(now);
                    if(new DBUpdater().ThemMoiSanPham(MaSP, TenSP, Mota, giagoc, phantram, MaDM, MaNCC)
                            && new DBUpdater().ThemMoiSanPhamCuaHang(MaSP, MaCH)
                            &&new DBUpdater().ThemLichSuGia(MaSP, NgayApDung, giagoc, phantram)){
                        JOptionPane.showMessageDialog(dialog, "Thêm thành công");
                        dialog.dispose();
                        LoadSuppliesTable();
                        LoadInventoryTable();
                        rowSorter= new TableRowSorter<>(jTable1.getModel());
                        jTable1.setRowSorter(rowSorter);
                        rowSorter4= new TableRowSorter<>(jTable6.getModel());
                        jTable6.setRowSorter(rowSorter4);
                    }
                    else{
                        JOptionPane.showMessageDialog(dialog, "Thêm thất bại");
                        dialog.dispose();
                    }

                }

            }
        });
        CacelBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dialog.dispose();
            }
        });
        dialog.getContentPane().setLayout(new BorderLayout());
        dialog.getContentPane( ).add(tmsp, BorderLayout.CENTER);
        dialog.getContentPane( ).add(jp, BorderLayout.SOUTH);
        dialog.setModal(true);
        dialog.pack();
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialog.setLocationRelativeTo(null);

        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter()
            {
                public void windowClosing (WindowEvent e)
                {
                    super.windowClosing(e);
                }
            });

    }//GEN-LAST:event_AddBtnMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        String MaSP = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        String TenSP  =jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
        String MoTa = (jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        int GiaGoc = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        int PhanTram =Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        String MaDM = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();
        String MaNCC = jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString();
        MaSPTxt.setText(MaSP);
        TenSPTxt.setText(TenSP);
        MoTaTxt.setText(MoTa);
        GiaGocTxt.setText(Integer.toString(GiaGoc));
        PhanTramGiamGiaTxt.setText(Integer.toString(PhanTram));
        LoadMaDMCBox();
        LoadMaNCCCBox();
        MaDMCBox.setSelectedItem(MaDM);
        MaNCCCBox.setSelectedItem(MaNCC);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        String MaDN = jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString();
        LoadImportOrderDetailsTable(MaDN);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        String MaDx = jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString();
        LoadDeliveryOrderDetailsTable(MaDx);
    }//GEN-LAST:event_jTable3MouseClicked

    private void UpdateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateBtnMouseClicked
        Boolean flag = true;
        String TenSp="";
        String Mota="";
        int GiaGoc =0;
        int PhanTram =0;
        if(MaSPTxt.getText().equals("")){
           JOptionPane.showMessageDialog(this, "Phải chọn 1 sản phẩm"); 
           flag = false;
        }
        else{
            TenSp = TenSPTxt.getText();
        if(TenSp.equals("")){
           JOptionPane.showMessageDialog(this, "Nhập tên sản phẩm"); 
           flag = false;
        }
        Mota = MoTaTxt.getText();
        if(Mota.equals("")){
            JOptionPane.showMessageDialog(this, "Nhập mô tả"); 
            flag = false;
        }
        
        if(GiaGocTxt.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Nhập giá gốc"); 
            flag = false;
        }
        else{
            GiaGoc = Integer.parseInt(GiaGocTxt.getText());
        }
        if(PhanTramGiamGiaTxt.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Nhập phần trăm giảm giá"); 
            flag = false;
        }
        else{
            PhanTram=Integer.parseInt(PhanTramGiamGiaTxt.getText());
        }
            
        }
        
        
        if(flag == true){
            String MaSP = MaSPTxt.getText();
            String MaDM = MaDMCBox.getSelectedItem().toString();
            String MaNCC = MaNCCCBox.getSelectedItem().toString();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");  
            LocalDateTime now = LocalDateTime.now();
            String NgayApDung = dtf.format(now);
            try{
                ResultSet rs = new DBUpdater().LayBangLichSuGia(MaSP);
                rs.next();
                int GiaHienTai = Integer.parseInt(rs.getString(3));
                int PhanTramHienTai = Integer.parseInt(rs.getString(4));
                if(GiaHienTai!=GiaGoc||PhanTramHienTai!=PhanTram){
                    if(new DBUpdater().ThemLichSuGia(MaSP, NgayApDung, GiaGoc, PhanTram)){
                        
                    }
                    else{
                        flag = false;
                    }
                }
            }
            catch(Exception e){
                
            }
            if(new DBUpdater().ChinhSuaSanPham(MaSP, TenSp, Mota, GiaGoc, PhanTram,MaDM, MaNCC)){
                JOptionPane.showMessageDialog(this, "Chỉnh sửa thành công");
                LoadSuppliesTable();
                LoadInventoryTable();
                rowSorter= new TableRowSorter<>(jTable1.getModel());
                jTable1.setRowSorter(rowSorter);
                rowSorter4= new TableRowSorter<>(jTable6.getModel());
                jTable6.setRowSorter(rowSorter4);
            }
            else{
                JOptionPane.showMessageDialog(this, "Chỉnh sửa thất bại"); 
            }
        }
               
    }//GEN-LAST:event_UpdateBtnMouseClicked

    private void DeleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteBtnMouseClicked
        Boolean flag = false;
        String MaSP =MaSPTxt.getText();
        if(MaSP.equals("")){
            JOptionPane.showMessageDialog(this, "Phải chọn 1 sản phẩm");
           
        }
        else{
            if(new DBUpdater().XoaSanPham(MaCH, MaSP)){
                JOptionPane.showMessageDialog(this, "Xoá thành công");
                MaSPTxt.setText("");
                TenSPTxt.setText("");
                MoTaTxt.setText("");
                GiaGocTxt.setText("");
                PhanTramGiamGiaTxt.setText("");
                MaDMCBox.removeAll();
                MaNCCCBox.removeAll();
                LoadInventoryTable();
                this.LoadSuppliesTable();
                rowSorter= new TableRowSorter<>(jTable1.getModel());
                jTable1.setRowSorter(rowSorter);
                rowSorter4= new TableRowSorter<>(jTable6.getModel());
                jTable6.setRowSorter(rowSorter4);
            }
            else{
                JOptionPane.showMessageDialog(this, "Xoá thất bại");
            }
            
        }
        
    }//GEN-LAST:event_DeleteBtnMouseClicked

    private void LuuVetBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LuuVetBtnMouseClicked
        String MaSP= MaSPTxt.getText();
        if(MaSP.equals("")){
            JOptionPane.showMessageDialog(this, "Phải chọn 1 sản phẩm");
        }
        else{
        LuuVetGiaSanPham luuvet = new LuuVetGiaSanPham(MaSP);
        JPanel jp = new JPanel();
        jp.setPreferredSize(new java.awt.Dimension(500, 40));
        jp.setBackground(new java.awt.Color(31,34,46));
        JButton OKBtn = new JButton("OK");
        OKBtn.setFont(new Font("Tahoma", Font.BOLD,14));
        OKBtn.setPreferredSize(new java.awt.Dimension(97, 25));
        
        jp.add(OKBtn);
        
        JDialog dialog = new JDialog();
        
        OKBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dialog.dispose();
            }
        });
        dialog.getContentPane().setLayout(new BorderLayout());
        dialog.getContentPane( ).add(luuvet, BorderLayout.CENTER);
        dialog.getContentPane( ).add(jp, BorderLayout.SOUTH);
        dialog.setModal(true);
        dialog.pack();
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialog.setLocationRelativeTo(null);

        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter()
            {
                public void windowClosing (WindowEvent e)
                {
                    super.windowClosing(e);
                }
            });

        }
        
    }//GEN-LAST:event_LuuVetBtnMouseClicked

    private void GiaGocTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GiaGocTxtKeyTyped
        if(!(Character.isDigit(evt.getKeyChar()))){
                evt.consume();
            }
        long num =0;
        try{
            num = Long.parseLong(GiaGocTxt.getText());
        }
        catch(Exception e){
            
        }
        
        if(num>Integer.MAX_VALUE){
            JOptionPane.showMessageDialog(this, "Giá rất cao");
            GiaGocTxt.setText(Integer.toString(Integer.MAX_VALUE));
        }
    }//GEN-LAST:event_GiaGocTxtKeyTyped

    private void PhanTramGiamGiaTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PhanTramGiamGiaTxtKeyTyped
        if(!(Character.isDigit(evt.getKeyChar()))){
                evt.consume();
            }
        int num= 0;
        try{
            num = Integer.parseInt(PhanTramGiamGiaTxt.getText());
        }
        catch(Exception e){
            
        }
        
        if(num>10){
            JOptionPane.showMessageDialog(this, "Phần trăm giảm giá không quá 100");
            PhanTramGiamGiaTxt.setText("100");
            evt.consume();
        }
    }//GEN-LAST:event_PhanTramGiamGiaTxtKeyTyped

    private void jtfFilter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFilter3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFilter3ActionPerformed
    public void LoadSuppliesTable(){
        DefaultTableModel dm = new  DefaultTableModel();
        dm.addColumn("Mã sản phẩm"); 
        dm.addColumn("Tên sản phẩm");
        dm.addColumn("Mô tả");
        dm.addColumn("Giá gốc");
        dm.addColumn("Phần trăm giảm giá");
        dm.addColumn("Mã danh mục");
        dm.addColumn("Mã nhà cung cấp");
        //dm.addColumn("Số lượng tồn");
        try{
            ResultSet rs = new DBUpdater().LayBangSanPham(MaCH);
            while (rs.next()){
                String MaSP = rs.getString(1); // lấy cột thứ 1.
                String TenSP = rs.getString(2);
                String Mota = rs.getString(3);
                String GiaGoc = rs.getString(4);
                String PhanTram = rs.getString(5);
                String MaDM = rs.getString(6);
                String MaNCC = rs.getString(7);
                dm.addRow(new String[]{MaSP, TenSP, Mota, GiaGoc,PhanTram,MaDM,MaNCC});
            }
            jTable1.setModel(dm);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadMaDMCBox(){
        try{
            ResultSet r = new DBUpdater().LayMaDM();
            while (r.next()){
                String madm = r.getString("MaDM");
                MaDMCBox.addItem(madm);
            } 
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadMaNCCCBox(){
        try{
            ResultSet r = new DBUpdater().LayMaNCC();
            while (r.next()){
                String mancc = r.getString("MaNCC");
                MaNCCCBox.addItem(mancc);
            } 
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadImportOrderTable(){
        DefaultTableModel dm = new  DefaultTableModel();
        dm.addColumn("Mã đơn nhập"); 
        dm.addColumn("Ngày nhập");
        dm.addColumn("Mã kho");
        dm.addColumn("Mã nhân viên");
        
        try{
            ResultSet rs = new DBUpdater().LayBangDonNhap(MaCH);
            while (rs.next()){
                String MaDN = rs.getString(1); // lấy cột thứ 1.
                String NgayNhap = rs.getString(2);
                String MaKho = rs.getString(3);
                String MaNV = rs.getString(4);
                
                dm.addRow(new String[]{MaDN, NgayNhap, MaKho, MaNV});
            }
            jTable2.setModel(dm);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadDeliveryOrderTable(){
        DefaultTableModel dm = new  DefaultTableModel();
        dm.addColumn("Mã đơn xuất"); 
        dm.addColumn("Ngày xuất");
        dm.addColumn("Mã kho");
        dm.addColumn("Mã nhân viên");
        
        try{
            ResultSet rs = new DBUpdater().LayBangDonXuat(MaCH);
            while (rs.next()){
                String MaDX = rs.getString(1); // lấy cột thứ 1.
                String NgayXuat = rs.getString(2);
                String MaKho = rs.getString(3);
                String MaNV = rs.getString(4);
                
                dm.addRow(new String[]{MaDX, NgayXuat, MaKho, MaNV});
            }
            jTable3.setModel(dm);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadImportOrderDetailsTable(String MaDonNhap){
        DefaultTableModel dm = new  DefaultTableModel();
        dm.addColumn("Mã đơn nhập"); 
        dm.addColumn("Số thứ tự");
        dm.addColumn("Mã sản phẩm");
        dm.addColumn("Số lượng nhập");
        try{
            ResultSet rs = new DBUpdater().LayBangChiTietDonNhap(MaDonNhap);
            while (rs.next()){
                String MaDN = rs.getString(1); // lấy cột thứ 1.
                String STT = rs.getString(2);
                String MaSP = rs.getString(3);
                String SLNhap = rs.getString(4);
                
                dm.addRow(new String[]{MaDN, STT, MaSP, SLNhap});
            }
            jTable4.setModel(dm);
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    public void LoadDeliveryOrderDetailsTable(String MaDonXuat){
        DefaultTableModel dm = new  DefaultTableModel();
        dm.addColumn("Mã đơn xuất"); 
        dm.addColumn("Số thứ tự");
        dm.addColumn("Mã sản phẩm");
        dm.addColumn("Số lượng xuất");
        
        try{
            ResultSet rs = new DBUpdater().LayBangChiTietDonXuat(MaDonXuat);
            while (rs.next()){
                String MaDX = rs.getString(1); // lấy cột thứ 1.
                String STT = rs.getString(2);
                String MaSP = rs.getString(3);
                String SLXuat = rs.getString(4);
                
                dm.addRow(new String[]{MaDX, STT, MaSP, SLXuat});
            }
            jTable5.setModel(dm);
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }
    public void LoadInventoryTable(){
        DefaultTableModel dm = new  DefaultTableModel();
        dm.addColumn("Mã sản phẩm"); 
        dm.addColumn("Tên sản phẩm");
        dm.addColumn("Số lượng tồn kho");
        
        
        try{
            ResultSet rs = new DBUpdater().LayBangTonKho(MaCH);
            while (rs.next()){
                String MaSP = rs.getString(1); // lấy cột thứ 1.
                String TenSP = rs.getString(2);
                String SoLuong = rs.getString(3);
                
                
                dm.addRow(new String[]{MaSP, TenSP, SoLuong});
            }
            jTable6.setModel(dm);
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }
    public void fillInventoryIDandInventoryAddress(){
        ResultSet rs = new DBUpdater().LayMaVaDiaChiKho(MaCH);
        try{
            while(rs.next()){
                
                MaKhoTxt.setText(rs.getString(1));
                DiaChiKhoTxt.setText(rs.getString(2));
            }
        }
        catch(Exception e){
            
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySanPham(MaCH).setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JLabel DiaChiKhoTxt;
    private javax.swing.JTextField GiaGocTxt;
    private javax.swing.JButton LuuVetBtn;
    private javax.swing.JComboBox<String> MaDMCBox;
    private javax.swing.JLabel MaKhoTxt;
    private javax.swing.JComboBox<String> MaNCCCBox;
    private javax.swing.JTextField MaSPTxt;
    private javax.swing.JTextArea MoTaTxt;
    private javax.swing.JTextField PhanTramGiamGiaTxt;
    private javax.swing.JTextField TenSPTxt;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jtfFilter;
    private javax.swing.JTextField jtfFilter1;
    private javax.swing.JTextField jtfFilter2;
    private javax.swing.JTextField jtfFilter3;
    // End of variables declaration//GEN-END:variables
}
